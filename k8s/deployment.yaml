#Deployment do postgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16.4 #nome imagem no docker huber
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: Passw0rd2024!
            - name: POSTGRES_USER
              value: reviewvideo
            - name: POSTGRES_DB
              value: reviewvideo
---
#Service do postgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  type: ClusterIP

---
#Deployment da aplicação
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviewvideo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: reviewvideo
  template:
    metadata:
      labels:
        app: reviewvideo
    spec:
      containers:
        - name: reviewvideo
          image: roncoleta/devops4dev-review:v2-multi
          ports:
            - containerPort: 8080
          env:
            - name: ASPNETCORE_HTTP_PORTS
              value: "8080"
            - name: ConnectionStrings_DefaultConnection 
              value: "Host=postgres;Database=reviewvideo;Username=reviewvideo;Password=Passw0rd2024!" 
              #Variável do host do banco de dados não funcionou, não pegou daqui, tive que por direto no appsettings.json
---
# service da aplicação
apiVersion: v1
kind: Service
metadata:
  name: reviewvideo
spec:
  selector:
    app: reviewvideo
  ports:
    - port: 80
      targetPort: 8080
  type: LoadBalancer
#não usamos o nodePort porque vamos rodar na nuvem, precisa de um ip externo 